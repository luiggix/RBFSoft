%!PS-Adobe-2.0 EPSF-2.0
%%Title: figure.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jun  5 16:16:58 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 294 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
549 672 M
0 3836 V
1.000 UL
LTb
4347 4508 M
-3798 0 V
1.000 UL
LTb
549 672 M
0 95 V
1.000 UL
LTb
549 462 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 4508 M
0 -95 V
1.000 UL
LTb
1309 672 M
0 95 V
1.000 UL
LTb
1309 462 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1309 4508 M
0 -95 V
1.000 UL
LTb
2069 672 M
0 95 V
1.000 UL
LTb
2069 462 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
2069 4508 M
0 -95 V
1.000 UL
LTb
2827 672 M
0 95 V
1.000 UL
LTb
2827 462 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
2827 4508 M
0 -95 V
1.000 UL
LTb
3587 672 M
0 95 V
1.000 UL
LTb
3587 462 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
3587 4508 M
0 -95 V
1.000 UL
LTb
4347 672 M
0 95 V
1.000 UL
LTb
4347 462 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
4347 4508 M
0 -95 V
1.000 UL
LTb
4347 672 M
-94 0 V
stroke
4473 672 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 672 M
94 0 V
1.000 UL
LTb
4347 1439 M
-94 0 V
stroke
4473 1439 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 1439 M
94 0 V
1.000 UL
LTb
4347 2207 M
-94 0 V
stroke
4473 2207 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 2207 M
94 0 V
1.000 UL
LTb
4347 2973 M
-94 0 V
stroke
4473 2973 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 2973 M
94 0 V
1.000 UL
LTb
4347 3741 M
-94 0 V
stroke
4473 3741 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 3741 M
94 0 V
1.000 UL
LTb
4347 4508 M
-94 0 V
stroke
4473 4508 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MLshow
grestore
1.000 UL
LTb
1.000 UL
LTb
549 4508 M
94 0 V
1.000 UP
1.000 UL
LT0
1063 4508 M
-10 -96 V
-29 -75 V
-10 -21 V
-75 -96 V
-10 -10 V
-69 -86 V
-26 -35 V
-35 -61 V
-41 -96 V
-19 -58 V
-10 -37 V
-21 -96 V
-17 -96 V
-14 -96 V
-11 -96 V
-9 -96 V
-8 -96 V
-5 -71 V
-2 -25 V
-6 -96 V
-5 -96 V
-5 -96 V
-4 -96 V
-3 -96 V
-3 -95 V
-3 -95 V
-3 -96 V
-2 -96 V
-2 -96 V
-2 -96 V
-2 -96 V
-1 -96 V
-2 -96 V
-1 -96 V
-2 -96 V
-1 -96 V
-2 -96 V
-1 -96 V
-2 -95 V
-1 -96 V
-3 -96 V
-4 -96 V
-5 -96 V
-3 -96 V
-2 -96 V
4063 4508 M
-1 -1 V
0 1 V
-2416 0 R
-8 -96 V
-44 -89 V
-6 -7 V
-89 -52 V
-90 -44 V
-5 -2 V
-95 -39 V
-91 -55 V
-4 -2 V
-95 -63 V
-38 -31 V
-57 -52 V
-38 -44 V
-57 -79 V
-10 -16 V
-47 -96 V
-37 -96 V
-1 -3 V
-28 -93 V
-23 -96 V
-19 -96 V
-16 -96 V
-9 -59 V
-5 -37 V
-11 -96 V
-10 -96 V
-9 -96 V
-8 -96 V
-7 -96 V
-6 -95 V
-5 -95 V
-6 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-3 -96 V
-3 -96 V
-3 -96 V
-3 -95 V
0 -1 V
-3 -96 V
-3 -96 V
-3 -96 V
-3 -95 V
-4 -96 V
-5 -96 V
-8 -96 V
-9 -96 V
-7 -96 V
-3 -96 V
4130 4508 M
-31 -96 V
-37 -54 V
-77 54 V
stroke
3985 4412 M
-18 66 V
-3 30 V
-1606 0 R
-4 -40 V
-24 40 V
356 0 R
-2 -96 V
-21 -96 V
-26 -34 V
-95 -45 V
-94 14 V
-94 47 V
-95 -31 V
-51 -47 V
-44 -16 V
-95 -30 V
-95 -15 V
-95 -13 V
-95 -20 V
-7 -2 V
-88 -23 V
-95 -30 V
-95 -32 V
-29 -11 V
-66 -26 V
-95 -46 V
-39 -24 V
-56 -39 V
-65 -56 V
-30 -31 V
-54 -65 V
-41 -59 V
-22 -37 V
-49 -96 V
-24 -55 V
-15 -41 V
-30 -96 V
-27 -96 V
-23 -96 V
0 -1 V
-18 -95 V
-15 -96 V
-14 -96 V
-12 -96 V
-11 -96 V
-11 -95 V
-9 -95 V
-5 -55 V
-3 -41 V
-7 -96 V
-6 -96 V
-6 -96 V
-5 -96 V
-5 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-5 -96 V
-4 -96 V
-5 -95 V
-6 -96 V
-8 -96 V
649 960 L
-5 -29 V
-9 -67 V
624 768 L
-5 -96 V
3165 4508 M
-7 -96 V
-31 -96 V
-15 -23 V
-95 -16 V
-37 39 V
-31 96 V
-4 96 V
731 0 R
-7 -96 V
-30 -96 V
-52 -73 V
-95 36 V
-16 37 V
-21 96 V
-4 96 V
722 0 R
-12 -96 V
-4 -13 V
-55 -83 V
-40 -65 V
-91 -31 V
-4 -3 V
-4 3 V
-55 96 V
-6 96 V
1 96 V
297 0 R
-11 -96 V
-26 -96 V
-6 -20 V
-46 -76 V
-35 -96 V
-14 -69 V
-11 -27 V
-24 -96 V
stroke
4027 3932 M
-18 -95 V
-15 -96 V
-15 -96 V
-12 -86 V
-4 -10 V
-33 -96 V
-30 -96 V
-27 -96 V
-1 -2 V
-95 -82 V
-83 84 V
-12 11 V
-48 85 V
-47 69 V
-16 27 V
-72 96 V
-7 7 V
-78 89 V
-17 16 V
-94 80 V
-1 0 V
-95 53 V
-95 37 V
-14 6 V
-81 27 V
-95 33 V
-95 29 V
-37 6 V
-58 10 V
-95 7 V
-95 6 V
-94 9 V
-94 7 V
-95 1 V
-95 -5 V
-95 -8 V
-95 -9 V
-95 -10 V
-47 -8 V
-48 -8 V
-95 -25 V
-95 -30 V
-84 -32 V
-11 -6 V
-95 -51 V
-61 -39 V
-34 -26 V
-79 -70 V
-16 -17 V
-65 -79 V
-30 -41 V
-33 -55 V
-51 -96 V
-11 -23 V
-28 -73 V
-33 -96 V
-32 -96 V
-2 -8 V
-21 -88 V
-20 -96 V
-18 -96 V
-18 -96 V
-17 -95 V
-1 -6 V
-11 -89 V
-10 -96 V
-10 -96 V
-9 -96 V
-9 -96 V
-8 -96 V
-8 -96 V
-7 -96 V
-7 -96 V
-7 -96 V
-7 -96 V
-2 -26 V
-4 -70 V
-6 -96 V
-6 -95 V
-7 -96 V
-11 -96 V
688 960 L
666 864 L
650 768 L
-6 -84 V
-1 -12 V
2354 3604 M
-95 21 V
-95 13 V
-95 4 V
-95 -2 V
-95 -10 V
-95 -18 V
-95 -26 V
-95 -33 V
-10 -4 V
-85 -48 V
-74 -48 V
-21 -16 V
-87 -80 V
-8 -9 V
-67 -87 V
-28 -36 V
-34 -60 V
stroke
1180 3165 M
-57 -96 V
-4 -8 V
-35 -88 V
-38 -96 V
-22 -53 V
-12 -43 V
-24 -96 V
-25 -95 V
-26 -95 V
-8 -29 V
-11 -67 V
-15 -96 V
-14 -96 V
-15 -96 V
-14 -96 V
-14 -96 V
-12 -83 V
-1 -13 V
-8 -96 V
-8 -96 V
-8 -96 V
-8 -96 V
-8 -96 V
-10 -95 V
-11 -96 V
-19 -96 V
-14 -39 V
726 960 L
700 864 L
678 768 L
-9 -96 V
4227 4508 M
-9 -96 V
-22 -96 V
-26 -96 V
-13 -57 V
-14 -39 V
-19 -96 V
-11 -96 V
-10 -95 V
-8 -96 V
-8 -96 V
-8 -96 V
-8 -96 V
-8 -96 V
-1 -13 V
-12 -83 V
-14 -96 V
-14 -96 V
-15 -96 V
-14 -96 V
-15 -96 V
-11 -67 V
-8 -29 V
-26 -95 V
-25 -95 V
-24 -96 V
-12 -43 V
-22 -53 V
-38 -96 V
-35 -88 V
-4 -8 V
-57 -96 V
-34 -60 V
-28 -36 V
-67 -87 V
-8 -9 V
-87 -80 V
-21 -16 V
-74 -48 V
-85 -48 V
-10 -4 V
-95 -33 V
-95 -26 V
-95 -18 V
-95 -10 V
-95 -2 V
-95 4 V
-95 13 V
-95 21 V
-94 28 V
-87 27 V
-7 4 V
-95 49 V
-81 43 V
-14 11 V
-95 80 V
-6 5 V
-75 96 V
-14 24 V
-38 72 V
-35 96 V
-20 96 V
-2 80 V
-1 16 V
1 3 V
16 93 V
37 96 V
42 75 V
21 20 V
74 60 V
95 33 V
95 -4 V
95 -35 V
stroke
2354 2644 M
94 -54 V
94 -54 V
95 -35 V
95 -4 V
95 33 V
74 60 V
21 20 V
42 75 V
37 96 V
16 93 V
1 3 V
-1 16 V
-2 80 V
-20 96 V
-35 96 V
-38 72 V
-14 24 V
-75 96 V
-6 5 V
-95 80 V
-14 11 V
-81 43 V
-95 49 V
-7 4 V
-87 27 V
-94 28 V
1899 904 R
-1 -12 V
-6 -84 V
-16 -96 V
-22 -96 V
-17 -96 V
-11 -96 V
-7 -96 V
-6 -95 V
-6 -96 V
-4 -70 V
-2 -26 V
-7 -96 V
-7 -96 V
-7 -96 V
-7 -96 V
-8 -96 V
-8 -96 V
-9 -96 V
-9 -96 V
-10 -96 V
-10 -96 V
-11 -89 V
-1 -6 V
-17 -95 V
-18 -96 V
-18 -96 V
-20 -96 V
-21 -88 V
-2 -8 V
-32 -96 V
-33 -96 V
-28 -73 V
-11 -23 V
-51 -96 V
-33 -55 V
-30 -41 V
-65 -79 V
-16 -17 V
-79 -70 V
-34 -26 V
-61 -39 V
-95 -51 V
-11 -6 V
-84 -32 V
-95 -30 V
-95 -25 V
-48 -8 V
-47 -8 V
-95 -10 V
-95 -9 V
-95 -8 V
-95 -5 V
-95 1 V
-94 7 V
-94 9 V
-95 6 V
-95 7 V
-58 10 V
-37 6 V
-95 29 V
-95 33 V
-81 27 V
-14 6 V
-95 37 V
-95 53 V
-1 0 V
-94 80 V
-17 16 V
-78 89 V
-7 7 V
-72 96 V
-16 27 V
-47 69 V
-48 85 V
-12 11 V
-83 84 V
-95 -82 V
stroke
1024 1921 M
-1 -2 V
-27 -96 V
-30 -96 V
-33 -96 V
-4 -10 V
-12 -86 V
-15 -96 V
-15 -96 V
-18 -95 V
-24 -96 V
-11 -27 V
-14 -69 V
785 960 L
739 884 L
-6 -20 V
707 768 L
696 672 L
297 0 R
1 96 V
-6 96 V
-55 96 V
-4 3 V
-4 -3 V
834 929 L
794 864 L
739 781 L
-4 -13 V
723 672 L
722 0 R
-4 96 V
-21 96 V
-16 37 V
-95 36 V
-52 -73 V
-30 -96 V
-7 -96 V
731 0 R
-4 96 V
-31 96 V
-37 39 V
-95 -16 V
-15 -23 V
-31 -96 V
-7 -96 V
835 0 R
-24 40 V
-4 -40 V
4277 4508 M
-5 -96 V
-11 -96 V
-9 -67 V
-5 -29 V
-14 -96 V
-8 -96 V
-6 -96 V
-5 -95 V
-4 -96 V
-5 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-5 -96 V
-5 -96 V
-6 -96 V
-6 -96 V
-7 -96 V
-3 -41 V
-5 -55 V
-9 -95 V
-11 -95 V
-11 -96 V
-12 -96 V
-14 -96 V
-15 -96 V
-18 -95 V
0 -1 V
-23 -96 V
-27 -96 V
-30 -96 V
-15 -41 V
-24 -55 V
-49 -96 V
-22 -37 V
-41 -59 V
-54 -65 V
-30 -31 V
-65 -56 V
-56 -39 V
-39 -24 V
-95 -46 V
-66 -26 V
-29 -11 V
-95 -32 V
-95 -30 V
-88 -23 V
-7 -2 V
-95 -20 V
-95 -13 V
-95 -15 V
-95 -30 V
-44 -16 V
-51 -47 V
-95 -31 V
stroke
2542 882 M
-94 47 V
-94 14 V
-95 -45 V
-26 -34 V
-21 -96 V
-2 -96 V
932 672 M
-3 30 V
-18 66 V
-77 54 V
797 768 L
766 672 L
4300 4508 M
-3 -96 V
-7 -96 V
-9 -96 V
-8 -96 V
-5 -96 V
-4 -96 V
-3 -95 V
-3 -96 V
-3 -96 V
-3 -96 V
0 -1 V
-3 -95 V
-3 -96 V
-3 -96 V
-3 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-4 -96 V
-6 -96 V
-5 -95 V
-6 -95 V
-7 -96 V
-8 -96 V
-9 -96 V
-10 -96 V
-11 -96 V
-5 -37 V
-9 -59 V
-16 -96 V
-19 -96 V
-23 -96 V
-28 -93 V
-1 -3 V
-37 -96 V
-47 -96 V
-10 -16 V
-57 -79 V
-38 -44 V
-57 -52 V
-38 -31 V
-95 -63 V
-4 -2 V
-91 -55 V
-95 -39 V
-5 -2 V
-90 -44 V
-89 -52 V
-6 -7 V
-44 -89 V
-8 -96 V
834 672 M
0 1 V
-1 -1 V
4324 4508 M
-2 -96 V
-3 -96 V
-5 -96 V
-4 -96 V
-3 -96 V
-1 -96 V
-2 -95 V
-1 -96 V
-2 -96 V
-1 -96 V
-2 -96 V
-1 -96 V
-2 -96 V
-1 -96 V
-2 -96 V
-2 -96 V
-2 -96 V
-2 -96 V
-3 -96 V
-3 -95 V
-3 -95 V
-3 -96 V
-4 -96 V
-5 -96 V
-5 -96 V
-6 -96 V
-2 -25 V
-5 -71 V
-8 -96 V
-9 -96 V
-11 -96 V
-14 -96 V
-17 -96 V
-21 -96 V
-10 -37 V
-19 -58 V
stroke
4138 1248 M
-41 -96 V
-35 -61 V
-26 -35 V
-69 -86 V
-10 -10 V
-75 -96 V
-10 -21 V
-29 -75 V
-10 -96 V
1.000 UL
LTb
4347 4508 M
0 -3836 V
1.000 UL
LTb
549 672 M
3798 0 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
